@model Health_Management_System.Models.loginModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css"
          integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N"
          crossorigin="anonymous">
    <style>

        body {
            background-color: #f8f9fa;
        }

        .login-container {
            max-width: 500px;
            margin: auto;
            margin-top: 50px;
            background-color: lightgreen;
            border-radius: 5px;
        }

        .login-header {
            text-align: center;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        h2 {
            margin-top: 20px;
            padding-top: 20px;
        }

        #fp {
            padding-bottom: 20px;
        }
    </style>
</head>
<body>
    <div>


        <div class="container login-container">
            <div class="login-header">
                <h2>Health Management System</h2>
                <p class="lead">Login to your account</p>
            </div>

            @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { @id = "login_form" }))
            {
            <div class="form-group">
                <label for="Username">Username</label>
                @Html.TextBoxFor(model => model.Username, new { @class = "form-control", PlaceHolder = "Enter Username" })
                @Html.ValidationMessageFor(model => model.Username)
            </div>
            <div class="form-group">
                <label for="Password">Password</label>
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", PlaceHolder = "Password" })
                @Html.ValidationMessageFor(model => model.Password)
            </div>
            <div class="form-group">
                <label for="exampleFormControlSelect1">Role</label>
                @Html.DropDownListFor(model => model.Role, new SelectList(new[] { "Doctor", "Nurse", "Staff", "Patient" }), "select role", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role)
            </div>

            <button type="submit" class="btn btn-primary">Submit</button>

            <div class="mt-3">
                <a href="#" onclick="showForgotPasswordModal()">Forgot Password?</a>
            </div>
            }
        </div>

        <div class="modal" id="forgotPasswordModal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Forgot Password</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <!-- Add form for new password, confirm password, and submit button -->
                        <form id="resetPasswordForm">
                            <div class="form-group">
                                <label for="ID">ID:</label>
                                <input type="text" class="form-control" id="ID" name="ID" required>
                            </div>
                            <div class="form-group">
                                <label for="newPassword">New Password:</label>
                                <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                            </div>
                            <div class="form-group">
                                <label for="confirmPassword">Confirm Password:</label>
                                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                            </div>
                            <button type="button" class="btn btn-primary" id="btn_submit" onclick="submitResetPassword()">Submit</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"
            integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
            integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.min.js"
            integrity="sha384-+sLIOodYLS7CIrQpBjl+C7nPvqq+FbNUBDunl/OZv93DB7Ln/533i8e/mZXLi/P+"
            crossorigin="anonymous"></script>

    <script>
        // JavaScript function to show the modal
        function showForgotPasswordModal() {
            $('#forgotPasswordModal').modal('show');
        }

        // JavaScript function to handle reset password form submission
        function submitResetPassword() {
            var ID = $('#ID').val();
            var newPassword = $('#newPassword').val();
            var confirmPassword = $('#confirmPassword').val();

            if (newPassword !== confirmPassword) {
                alert('Passwords do not match');
                return;
            }

            $.ajax({
                url: "/Account/UpdatePassword",
                type: "POST",
                data: {
                    ID: ID,
                    newPassword: newPassword,
                    confirmPassword: confirmPassword
                },
                success: function (response) {
                    alert('Password updated successfully');
                    $('#forgotPasswordModal').modal('hide');
                },
                error: function (xhr, status, error) {
                    console.error('Error updating password:', error);
                }
            });

        }

        //$(document).ready(function () {
        //    $('#btn_submit').on('click', function () {
        //        try {
        //            var newPassword = $('#newPassword').val();
        //            var confirmPassword = $('#confirmPassword').val();

        //            if (newPassword !== confirmPassword) {
        //                alert('Passwords do not match');
        //                return;
        //            }

        //            $.ajax({
        //                url: "/Account/UpdatePassword",
        //                type: "POST",
        //                data: {
        //                    newPassword: newPassword,
        //                    confirmPassword: confirmPassword
        //                },
        //                success: function (response) {
        //                    alert('Password updated successfully');
        //                    $('#forgotPasswordModal').modal('hide');
        //                },
        //                error: function (xhr, status, error) {
        //                    console.error('Error updating password:', error);
        //                }
        //            });
        //        } catch (error) {
        //            console.error(error);
        //        }
        //    });
        //});
    </script>
    @if (ViewBag.AlertMessage != null)
    {
    <script type="text/javascript">
            alert('@ViewBag.AlertMessage');
    </script>
    }

</body>
</html>