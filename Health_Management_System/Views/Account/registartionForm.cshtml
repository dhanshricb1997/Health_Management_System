@model Health_Management_System.Models.Registation
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/DashboardStyleSheet.css" rel="stylesheet" />
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>registartionForm</title>
    <style>
        .fa {
            font-size: 3em !important; 
        }

        .fas {
            font-size: 3em !important; 
        }
    </style>
</head>
<body>
    @using (Html.BeginForm("Register", "Account", FormMethod.Post))
    {
        <div class="container">
            <div class="row" id="Regiwrapper" style="border:1px solid black;width:500px;margin-left:350px;height:600px;">
                <div class="row formlable" style="text-align:center;margin-top:20px;margin-bottom:20px; color:darkslategray;">
                    <h3>Registration Form</h3>
                </div>
                <div class="row fieldrow" style="padding: 10px;margin-left:32px;">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.firstName, new { @class = "control-label" })

                    </div>
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.firstName, new { @class = "content-placeholder", style = "width:250px;height:25px", placeholder = "Please Enter First Name", @id = "firstName" })

                    </div>
                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                </div>
                <div class="row fieldrow" style="padding: 10px; margin-left: 32px;">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.middleName, new { @class = "control-label" })

                    </div>
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.middleName, new { @class = "content-placeholder", style = "width : 250px; height : 25px", placeholder = "Please Enter Middle Name" })

                    </div>
                    @Html.ValidationMessageFor(model => model.middleName, "", new { @class = "text-danger" })
                </div>
                <div class="row fieldrow" style="padding: 10px; margin-left: 32px;">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.lastName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.lastName, new { @class = "content-placeholder", placeholder = "Please Enter last Name", style = "width : 250px ; height : 25px" })

                    </div>
                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                </div>
                <div class="row fieldrow" style="padding: 10px; margin-left: 32px;">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.mobNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.mobNumber, new { @class = "content-placeholder", placeholder = "Please Enter Mobile Number", style = "width : 250px ; height : 25px", @maxlength = "10" })

                    </div>
                    @Html.ValidationMessageFor(model => model.mobNumber, "", new { @class = "text-danger" })
                </div>
                <div class="row fieldrow" style="padding: 10px; margin-left: 32px;">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.designation, new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.designation, new { @class = "content-placeholder", placeholder = "Please Enter last Name", style = "width : 250px ; height : 25px", @id = "designation" })

                    </div>
                    @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
                </div>
                <div class="row fieldrow" style="padding: 10px; margin-left: 32px;">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.role, new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.role, new List<SelectListItem> { new SelectListItem { Text = "--Select--", Value = "" } }, new { @class = "content-placeholder", style = "width: 250px; height: 25px", @id = "role" })
                    </div>
                    @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
                </div>
                <div class="row fieldrow" style="padding: 10px; margin-left: 32px;">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.address, new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.address, new { @class = "content-placeholder", placeholder = "Please Enter Address", style = "width : 250px ; height : 25px" })

                    </div>
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
                <div class="row" style="margin-top:20px;margin-bottom:20px;margin-left:2px;">
                    <button type="submit" class="btn btn-success">Submit</button>
                </div>
            </div>          
        </div>
    }
    <script>
        $(document).ready(function () {
            $('#role').on('input', function () {
                var searchText = $(this).val();
                alert(searchText);
                $.ajax({
                    url: '../Account/registartionForm',
                    type: 'GET',
                    data: { searchText: searchText },
                    success: function (response) {
                        $('#role').empty(); // Clear existing options
                        $.each(response, function (index, option) {
                            $('#role').append($('<option>').text(data.Text).val(data.Value));
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', error);
                    }
                });
            });
        });
    </script>
</body>
</html>
